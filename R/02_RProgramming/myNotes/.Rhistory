set.env()
help(set.environment)
setwd("Assignment-3/")
head(outcome);
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/part-1.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/part-1.R', echo=TRUE)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses="character");
head(outcome);
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/part-1.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/part-1.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
stop("invalid state");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
best("CA", "DEAD");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
print("Good state");
getwd();
setwd("Assignment3");
setwd("Assignment-3");
Rprof(NULL);
source('~/.active-rstudio-document', echo=TRUE)
best <- function(state, outcome) {
# read outcome data
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
# check the state and outcome are valie
>
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
best("CA", "DEAD");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/part-1.R', echo=TRUE)
hist(outcome[,11]);
outcome[,1];
outcome[,2];
outcome[,3];
outcome[,4];
outcome[,5];
outcome[,6];
outcome[,7];
unique(outcome[,7]);
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
getStatesVector();
print(getStatesVector());
sv <- getStatesVector();
sv
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
best("MA");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
best("AA");
best("AK");
best("MA");
best("MM");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
getStatesVector <- unique(getOutcomes()[,7]);
best("MA");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
if(! is.element(state, getStatesVector())) {
stop("invalid state");
}
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
outcome <- getOutcomes();
best("MA");
best("AA");
best("MA");
best("AA");
source("best.R");
source("best.R");
best("TX", "heart attack");
outcome <- getOutcomes();
outcome[,1];
outcome[,2];
outcome[,3];
outcome[,4];
outcome[,5];
outcome[,6];
outcome[,7];
outcome[,8];
outcome[,9];
outcome[,10];
outcome[,11];
outcome[,12];
outcome[,13];
outcome[,14];
outcome[,15];
outcome[,16];
outcome[,17];
outcome[,18];
outcome[,19];
outcome[,20];
outcome[,21];
outcome[,22];
outcome[,23];
outcome[,24];
outcome[,25];
outcomes
outcomne
outcome
str(outcomes)
str(outcome)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
getStatesVector <- unique(getOutcomes()[,"state"]);
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
getStatesVector <- unique(getOutcomes()[,"State"]);
best("TX", "heart attack");
outcome[,"State"];
getStatesVector();
getStatesVector()
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
getStatesVector()
print(getStatesVector);
sv <- getStatesVector()
sv
sv
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
sv2 <- getStatesVector()
sv2
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
return(sv);
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
getStatesVector <- unique(getOutcomes()[,"State"])
sv2 <- getStatesVector()
getStatesVector();
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
getOutcomesVector();
ov <- getOutcomesVector();
ov
outcomes[,2];
outcome[,2];
outcome[,1];
source("best.R");
ov <- getOutcomesVector();
source("best.R");
ov <- getOutcomesVector();
source("best.R");
ov <- getOutcomesVector();
ov
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
ov <- getOutcomesVector();
get30DayMortalityRateHeartAttack();
30hr <- get30DayMortalityRateHeartAttack();
hr30day <- get30DayMortalityRateHeartAttack();
hr30day
source("best.R");
source("best.R");
source("best.R");
valid(outcomes)
validOutcomes();
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
v <- validOutcomes();
v
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source("best.R");
v <- validOutcomes();
v
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
v <- validOutcomes();
v
source("best.R");
best("TX","cal")
best("TX","heart attack")
best("TX","heart.attack")
best("TX","heart.attacks")
source("best.R");
best("TX","heart.attack")
best("TX","heart.attacks")
best("TX","heart attacks")
best("TX","heart.attack")
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
best("TX","heart attacks")
best("TX","heart.attack")
best("TX","heart attack")
source("best.R");
source("best.R");
best("TX","heart attack")
best("TX","heart.attack")
outcome
source("best.R");
outcome
best("TX","heart attack")
best("TX","heart.attack")
source("best.R");
best("TX","heart.attack")
best("TX","heart attack")
source("best.R");
best("TX","heart attack")
best("TX","heart.attack")
source("best.R");
best("TX","heart.attack")
source("best.R");
best("TX","heart.attack")
best("TX","heart attack")
source("best.R");
best("TX","heart attack")
best("TX","heart.attack")
best("TX","heart attack")
source("best.R");
source("best.R");
best("TX","heart attack")
best("TX","heart.attack")
source("best.R");
best("TX","heart attack")
source("best.R");
best("TX","heart attack")
best("TX","heart.attack")
best("TX","heart.failure")
best("TX","heart failure")
best("TX","heart failures")
best("TX","pneumonia")
best("TX","pneumonias")
source("best.R");
source("best.R");
source("best.R");
source("best.R");
best("TX","pneumonias")
best("TX","pneumonia")
source("best.R");
best("TX","pneumonia")
source("best.R");
best("TX","pneumonia")
best("TX","pneumonias")
source("best.R");
best("TX","pneumonias")
best("TX","pneumonia")
best("TX","heart attach")
best("TX","heart attack")
best("TX","heart.attack")
best("TX","heart.attack")
best("TX","heart.failure")
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
setwd("Assignment-3");
source("best.R");
best("TX", "heart attack");
best("TX", "heart.attack");
source("best.R");
best("TX", "heart attack");
best("TX", "heart.attack");
best("TX", "pneumonia");
best("TX", "pneumoniA");
source("best.R");
source("best.R");
best("TX", "pneumoniA");
best("TX", "pneumonia");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
source("best.R");
best("TX", "pneumonia");
best("TX", "heart attack");
best("TX", "heart.attack");
source("best.R");
best("TX", "heart.attack");
best("TX", "heart attack");
source("best.R");
source("best.R");
source("best.R");
source("best.R");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
best("TX", "heart attack");
best("TX", "heart.attack");
source("best.R");
best("TX", "heart.attack");
best("TX", "heart attack");
source("best.R");
best("TX", "heart attack");
best("TX", "heart.attack");
best("TX", "heart.attacks");
best("TX", "heart.failure");
best("TX", "heartfailure");
best("TX", "heart failure");
best("TX", "pneumonia");
best("TX", "pneumonias");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonias");
best("TX", "pneumonia");
source("best.R");
source("best.R");
best("TX", "pneumonia");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
data <. getOutcomes();
data <- getOutcomes();
filter(data,1);
data <- getOutcomes();
data[1,];
data[2,];
data[3,];
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
data[3,];
filter(data,1);
data[3,];
data[3,];
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
best("TX", "pneumonias");
best("TX", "pneumonia");
source("best.R");
setwd("Assignment-3/");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
best("TX", "pneumonia");
source("best.R");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
quit
quit();
exit
quit
source("best.R");
source("best.R");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source('~/Sites/R/02_RProgramming/myNotes/Assignment-3/best.R', echo=TRUE)
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
source("best.R");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
best("TX", "pneumonia");
source("best.R");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
source("best.R");
best("TX", "pneumonia");
best("MA", "pneumonia");
best("ME", "pneumonia");
best("MA", "pneumonia");
best("NY", "pneumonia");
best("NY", "heart.attack");
best("NY", "heart attack");
best("NY", "heart attacks");
best("NY", "heart attack");
best("NY", "heart.attack");
best("AL", "heart.attack");
best("NY", "heart.attack");
best("VT", "heart.attack");
best("VT", "pneumonia");
